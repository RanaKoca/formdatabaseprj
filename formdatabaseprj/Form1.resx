<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkK
        DA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCADAAMwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiivnz47ftrfCv4K303hm3W48UeJ4MCXTNPdVjtiQC
        PtE7ZWM4I+VQ78g7cHNbUMPVxU/Z0Y3ZhiMTRwkPaVpWR9B0V+aniD/gox8aNYvAdB0zw94fgXJEa27X
        LsOwMkjYJHsq/SsOb/go/wDGvw/dRzatrnh2dEYF7eTTVy49MIwf2yK9pcNY3l5pcq9X/SPC/wBacC6n
        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
</value>
  </data>
</root>